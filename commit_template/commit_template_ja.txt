# <タイプ>(<スコープ>): <短い説明> (50文字以内)
# feat(main): ユーザー認証モジュールの追加

コミットタイプ: (以下の中から選択してください)
#	feat: 新機能や機能追加
#	fix: バグ修正
#	docs: ドキュメントの変更
#	style: コードのスタイル調整（インデント、空白など）で、ロジックは変更しない
#	refactor: 新機能追加やバグ修正を行わないコードのリファクタリング
#	test: テストコードの追加・修正
#	chore: ビルドプロセスやツール周りの変更

スコープ: (コミットが影響を与えるコードベースの簡単な説明)

長い説明 (72文字で折り返し):
# - コミットが行う内容の詳細な説明。
# - 必要に応じて複数の箇条書きを使用できます。

動機:
# - このコミットの変更の背後にある動機を説明してください。

IssueまたはPull Request: (例: "fixes: #123" or "closes: #456" or "Issue # 789", "PR #1000")
# - 適用可能な場合、このコミットが対処するIssueやPull Requestへの参照を追加してください。



# 例
# feat(main): ユーザー認証モジュールの追加
# 
# 以下の機能をサポートする新しいユーザー認証モジュールを追加:
# - メールアドレスとパスワードによる登録
# - メールアドレスとパスワードによるログイン
# - パスワードリセット機能
# 
# 動機:
# - 認証システムを追加することでアプリケーションのセキュリティを向上させる
# - ユーザーのログイン状況に基づいたパーソナライズされたコンテンツでより良いユーザー体験を提供する
# 
# Issue: #42
 
